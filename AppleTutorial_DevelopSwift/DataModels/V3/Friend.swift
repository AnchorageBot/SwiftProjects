//
//  Friend.swift
//  Birthdays
//
//  Created by ATS on 4/20/24
//  Xcode version 15.3
//  Refactored on 4/21/24
//

/*
 
Abstract:

This code stores data which will be displayed in the app's content view. The file is built using SwiftUI, which allows for a declarative and concise way of constructing the user interface.

References:
 - Welcome to data modeling  https://developer.apple.com/tutorials/develop-in-swift/welcome-to-data-modeling
 
*/


import Foundation
import SwiftData

/// SwiftData gives you access to the @Model macro. Macros modify existing code with new functionality. In this case, @Model converts a Swift class into a stored model managed by SwiftData.
@Model

/// the Friend class stores data, which you’ll display in ContentView.
/// A class and a struct both hold data, but instances of a class have a built-in identity that instances of a struct don’t have. SwiftData uses this identity to share its model data across the entire app, to any view that needs it. When any view modifies a model, SwiftData sees those changes immediately.
class Friend {
    
    let name: String
    
    /// The Swift Date type represents a specific point in time, down to fractions of a second.
    let birthday: Date
    
    
    /// An initializer creates an instance of a type by assigning values to every property. For structures, Swift generates an initializer with arguments matching each of its properties. But classes don’t get autogenerated initializers, so you need to create one.
    init(name: String, birthday: Date) {
        self.name = name
        self.birthday = birthday
        
    }
}
